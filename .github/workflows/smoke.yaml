name: ops Smoke Tests

on:
  workflow_dispatch:
    schedule:
      - cron:  '0 7 25 * *'

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # pylibjuju does not currently support Juju 4.x
        # TODO: we should run against 2.9, but that means installing pylibjuju
        # "<3", and we need to do that inside the tox environment, so that's a
        # bit more complex than having everything inside this workflow.
        # Note that Juju 2.9 needs to be '2.9 --classic' because the snap is
        # only available with classic confinement.
        juju-version: ['3']
        charmcraft-version: ['2.x', '3.x']
        cloud: ['lxd', 'microk8s']

    steps:
      - name: Set up LXD
        if: matrix.cloud == 'lxd'
        uses: canonical/setup-lxd@ce8decb3609c0a03c5abd5034d02a6c145e2076f
        with:
          channel: 5.0/stable

      - name: Set up Microk8s
        if: matrix.cloud == 'microk8s'
        uses: balchua/microk8s-actions@v0.3.2
        with:
          channel: '1.26-strict/stable'
          devMode: 'true'
          addons: '["dns", "hostpath-storage"]'

      - name: Set up Juju
        run: sudo snap install juju --channel=${{ matrix.juju-version }}

      - name: Bootstrap Juju controller (k8s)
        if: matrix.cloud == 'microk8s'
        # TODO: instead of sudo, use `sg` to do this? `sudo usermod -a -G snap_microk8s runner`
        run: sudo juju bootstrap microk8s

      - name: Bootstrap Juju controller (lxd)
        if: matrix.cloud == 'lxd'
        run: juju bootstrap localhost

      - name: Install charmcraft
        run: sudo snap install charmcraft --channel=${{ matrix.charmcraft-version }} --classic

      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Python 3
        uses: actions/setup-python@v5

      - name: Install tox
        run: sudo pip install tox~=4.2

      - name: Run smoke tests
        # pytest-operator runs charmcraft pack with `sg lxd`, which seems to
        # prompt for a password, so bypass that.
        run: sudo tox -e smoke
